#! /bin/bash

#if [ "$EUID" -ne 0 ]
#  then echo "Please run as root"
#  exit
#fi


if [[ $# -eq 0 ]] ; then
    echo "[-] Domain not supplied [-]"
    echo "[+] Example: >_ $0 domain.com [+]"
    exit 1
fi

if [[ $# > 1 ]] ; then
	echo "[-] Unnecessary Arguments [-]"
    echo "[+] Example: >_ $0 domain.com [+]"
	exit 1
fi


regex='^([a-z0-9]+(-[a-z0-9]+)*\.)+[a-z]{2,}$'
if ! [[ $1 =~ $regex ]]; then
	echo "[-] Argument is not a domain. [-]"
    echo "[+] Example: >_ $0 domain.com [+]"
	exit 1
fi


echo "[+]------ Starting Subdomain Enumeration ------[+]";

echo "[+] Running Subfinder [+]"
subfinder -silent -d $1 -all -o $11.txt

echo "[+] Running Assetfinder [+]"
assetfinder $1 >$12.txt

echo "[+] Running Amass[+]"
amass enum -passive -d $1 -o $13.txt

echo "[+] Running Amass Active Mode [+]"
amass enum -active -brute -min-for-recursive 2 -max-dns-queries 500 -d $1 -o $14.txt -r 8.8.8.8,1.1.1.1,8.8.4.4,1.0.0.1

echo "[+] Combining results [+]"
cat $11.txt $12.txt $13.txt $14.txt >> $1all.txt

echo "[+] Removing Duplicates [+]"
sort -u $1all.txt > $1domains.txt
awk '!seen[$0]++' $1domains.txt > $1all.txt
sort $1all.txt | uniq > $1domains.txt

echo "[+] Checking for alive domains.. [+]"
httpx -l $1domains.txt -silent -o $1activehttpsubdomain.txt


echo "[+] Sorting active enumerated domains.. [+]"
cat $1activehttpsubdomain.txt | grep $1 > $1httpsubdomain.txt
echo "[+] Removing https or http from domains [+]"
cat $1httpsubdomain.txt |sed -E 's/^\s*.*:\/\///g' >> $1subdomains.txt
echo "[+] Removing Unnecessary Files [+]"
rm $11.txt $12.txt $13.txt $14.txt $1all.txt $1domains.txt $1activehttpsubdomain.txt
echo "[+] Automated Subdomain Takeover Test [+]"
subzy r --targets $1subdomains.txt >> $1subzyResult.txt
echo "[+] Check Manually Also Subdomain Takeover with https://github.com/EdOverflow/can-i-take-over-xyz [+]"
echo "[-] Done [-]"

